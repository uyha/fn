include(CTest)
if(NOT BUILD_TESTING)
  return()
endif()

include(CompileOptions)
include(Conan)

find_package(Catch2 REQUIRED)
find_package(sml REQUIRED)

macro(construct_test name)
  cmake_parse_arguments(arg ";" ";" "SOURCES;TEST_ARGUMENTS" ${ARGN})
  add_executable(${name} ${arg_SOURCES})
  target_link_libraries(${name} PRIVATE Catch2::Catch2WithMain river::fn)
  target_compile_options(${name} PRIVATE ${warnings} ${wae})
  add_test(NAME ${name} COMMAND ${name} ${arg_TEST_ARGUMENTS})
endmacro()

construct_test(traits SOURCES traits.test.cpp)
construct_test(free_functions SOURCES free_functions.test.cpp)
construct_test(member_functions SOURCES member_functions.test.cpp)
if (NOT MSVC)
  construct_test(sml_integration SOURCES sml_integration.test.cpp)
  target_link_libraries(sml_integration PRIVATE sml::sml)
endif ()
